#include <stdio.h>
#include <string.h>

#define MAX_USERS 5
#define MAX_FILES 10

struct Directory {
    char userName[20];
    char fileNames[MAX_FILES][20];
    int fileCount;
};

struct Directory users[MAX_USERS];
int userCount = 0;

int findUserIndex(char name[]) {
    for (int i = 0; i < userCount; i++) {
        if (strcmp(users[i].userName, name) == 0)
            return i;
    }
    return -1;
}

void createUser() {
    if (userCount >= MAX_USERS) {
        printf("User limit reached.\n");
        return;
    }
    char name[20];
    printf("Enter new user name: ");
    scanf("%s", name);

    if (findUserIndex(name) != -1) {
        printf("User already exists.\n");
        return;
    }

    strcpy(users[userCount].userName, name);
    users[userCount].fileCount = 0;
    userCount++;
    printf("User created successfully.\n");
}

void createFile() {
    char user[20], file[20];
    printf("Enter user name: ");
    scanf("%s", user);
    int index = findUserIndex(user);

    if (index == -1) {
        printf("User not found.\n");
        return;
    }

    if (users[index].fileCount >= MAX_FILES) {
        printf("File limit reached for this user.\n");
        return;
    }

    printf("Enter file name to create: ");
    scanf("%s", file);

    for (int i = 0; i < users[index].fileCount; i++) {
        if (strcmp(users[index].fileNames[i], file) == 0) {
            printf("File already exists.\n");
            return;
        }
    }

    strcpy(users[index].fileNames[users[index].fileCount], file);
    users[index].fileCount++;
    printf("File created successfully.\n");
}

void deleteFile() {
    char user[20], file[20];
    printf("Enter user name: ");
    scanf("%s", user);
    int index = findUserIndex(user);

    if (index == -1) {
        printf("User not found.\n");
        return;
    }

    printf("Enter file name to delete: ");
    scanf("%s", file);
    int found = 0;

    for (int i = 0; i < users[index].fileCount; i++) {
        if (strcmp(users[index].fileNames[i], file) == 0) {
            // Shift files left
            for (int j = i; j < users[index].fileCount - 1; j++) {
                strcpy(users[index].fileNames[j], users[index].fileNames[j + 1]);
            }
            users[index].fileCount--;
            found = 1;
            break;
        }
    }

    if (found)
        printf("File deleted successfully.\n");
    else
        printf("File not found.\n");
}

void searchFile() {
    char user[20], file[20];
    printf("Enter user name: ");
    scanf("%s", user);
    int index = findUserIndex(user);

    if (index == -1) {
        printf("User not found.\n");
        return;
    }

    printf("Enter file name to search: ");
    scanf("%s", file);

    for (int i = 0; i < users[index].fileCount; i++) {
        if (strcmp(users[index].fileNames[i], file) == 0) {
            printf("File found under user %s.\n", user);
            return;
        }
    }

    printf("File not found.\n");
}

void displayFiles() {
    char user[20];
    printf("Enter user name: ");
    scanf("%s", user);
    int index = findUserIndex(user);

    if (index == -1) {
        printf("User not found.\n");
        return;
    }

    printf("Files under user %s:\n", user);
    if (users[index].fileCount == 0) {
        printf("No files found.\n");
    } else {
        for (int i = 0; i < users[index].fileCount; i++) {
            printf("%d. %s\n", i + 1, users[index].fileNames[i]);
        }
    }
}

int main() {
    int choice;
    while (1) {
        printf("\n--- Two Level Directory ---\n");
        printf("1. Create User\n2. Create File\n3. Delete File\n4. Search File\n5. Display User Files\n6. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1: createUser(); break;
            case 2: createFile(); break;
            case 3: deleteFile(); break;
            case 4: searchFile(); break;
            case 5: displayFiles(); break;
            case 6: return 0;
            default: printf("Invalid choice!\n");
        }
    }
}
